% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flame.R
\name{getFlame}
\alias{getFlame}
\title{Get the shape of a single flame}
\usage{
getFlame(faces = 10, radius = 0.3, dz = 1, z.exp = 1.1, expand = 1,
  turn = 0)
}
\arguments{
\item{faces}{number of side and height}

\item{radius}{maximum width}

\item{dz}{increase in height per z-side}

\item{z.exp}{exponetial z factor}

\item{expand}{linear width (x/y) expend factor with height}

\item{turn}{twist the flame a bit}
}
\value{
list of vertices and ids to be used with rgl::triangles3d
}
\description{
Get the shape of a single flame
}
\examples{
\dontrun{
library(rgl)
inner.radius = 5
fire.prob = 0.5
rgl.clear()
XXX = NULL
for (i in 1:round(200*fire.prob^2)) {
  ## angle of each flame
  phi    <- runif(1) * 2 * pi
  ## fractional distance from center of each flame
  dist   <- rbeta(1, 1.1, 1)
  ## absolute distance from center in x/y direction
  offset <- c(sin(phi) * dist * inner.radius,
              cos(phi) * dist * inner.radius) * fire.prob
  ## random twist of flame top
  turn   <- rnorm(1, sd=2)
  ## radius/height reduction depending on distance from center
  XXX=append(XXX, sqrt(sum(offset^2)) / inner.radius)
  radius <- rlnorm(1, meanlog=-0.2 * (2 + sqrt(sum(offset^2))), sdlog=0.1)
  dz     <- 0.5 + rlnorm(1, meanlog=-0.4 * sqrt(sum(offset^2)), sdlog=0.3)
  ## center (whitish)
  x = getFlame(radius=radius, dz=dz*0.8, turn=turn,expand=0.5)
  x$vertices$x = x$vertices$x + offset[1]
  x$vertices$y = x$vertices$y + offset[2]
  triangles3d(x$vertices[x$id[, (2 * 20 + 1):150], ], col="#e6ffcc", alpha=1, shininess=1,lit=F)
  ## inner ( yellow)
  x = getFlame(radius=radius, dz=dz*0.97, turn=turn)
  x$vertices$x = x$vertices$x + offset[1]
  x$vertices$y = x$vertices$y + offset[2]
  triangles3d(x$vertices[x$id[, (2 * 20 + 1):175], ], col="#f0ff00", alpha=0.6, shininess=1,lit=F)
  ## outer ( red)
  x = getFlame(radius=radius, dz=dz, expand=1.5, turn=turn)
  x$vertices$x = x$vertices$x + offset[1]
  x$vertices$y = x$vertices$y + offset[2]
  triangles3d(x$vertices[x$id[, (2*20+1):200], ], col="#ce1301", alpha=0.3,shininess=10,lit=F)
}
rgl.viewpoint(0,-60,fov=0)
axis3d('x', pos = c(NA, 0, 0))
axis3d('y', pos = c(0, NA, 0))
axis3d('z', pos = c(0, 0, NA))
}
}
